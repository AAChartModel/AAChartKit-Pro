/*
 Highmaps JS v11.0.1 (2023-05-08)

 (c) 2009-2021 Torstein Honsi

 License: www.highcharts.com/license
*/
'use strict';(function(c){"object"===typeof module&&module.exports?(c["default"]=c,module.exports=c):"function"===typeof define&&define.amd?define("highcharts/modules/heatmap",["highcharts"],function(p){c(p);c.Highcharts=p;return c}):c("undefined"!==typeof Highcharts?Highcharts:void 0)})(function(c){function p(c,h,l,u){c.hasOwnProperty(h)||(c[h]=u.apply(null,l),"function"===typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:h,module:c[h]}})))}c=c?c._modules:
{};p(c,"Core/Axis/Color/ColorAxisComposition.js",[c["Core/Color/Color.js"],c["Core/Utilities.js"]],function(c,h){const {parse:l}=c,{addEvent:u,extend:w,merge:z,pick:n,splat:g}=h;var t;(function(c){function A(){const a=this.options;this.colorAxis=[];a.colorAxis&&(a.colorAxis=g(a.colorAxis),a.colorAxis.forEach((a,d)=>{a.index=d;new q(this,a)}))}function t(a){const d=d=>{d=a.allItems.indexOf(d);-1!==d&&(this.destroyItem(a.allItems[d]),a.allItems.splice(d,1))};let b=[],e,f;(this.chart.colorAxis||[]).forEach(function(a){(e=
a.options)&&e.showInLegend&&(e.dataClasses&&e.visible?b=b.concat(a.getDataClassLegendSymbols()):e.visible&&b.push(a),a.series.forEach(function(a){if(!a.options.showInLegend||e.dataClasses)"point"===a.options.legendType?a.points.forEach(function(a){d(a)}):d(a)}))});for(f=b.length;f--;)a.allItems.unshift(b[f])}function m(a){a.visible&&a.item.legendColor&&a.item.legendItem.symbol.attr({fill:a.item.legendColor})}function r(){const a=this.chart.colorAxis;a&&a.forEach(function(a,d,b){a.update({},b)})}function e(){(this.chart.colorAxis&&
this.chart.colorAxis.length||this.colorAttribs)&&this.translateColors()}function b(){const a=this.axisTypes;a?-1===a.indexOf("colorAxis")&&a.push("colorAxis"):this.axisTypes=["colorAxis"]}function a(a){const d=this,b=a?"show":"hide";d.visible=d.options.visible=!!a;["graphic","dataLabel"].forEach(function(a){if(d[a])d[a][b]()});this.series.buildKDTree()}function d(){const a=this,d=this.options.nullColor,b=this.colorAxis,e=this.colorKey;(this.data.length?this.data:this.points).forEach(f=>{var k=f.getNestedProperty(e);
(k=f.options.color||(f.isNull||null===f.value?d:b&&"undefined"!==typeof k?b.toColor(k,f):f.color||a.color))&&f.color!==k&&(f.color=k,"point"===a.options.legendType&&f.legendItem&&f.legendItem.label&&a.chart.legend.colorizeItem(f,f.visible))})}function k(a){const d=a.prototype.createAxis;a.prototype.createAxis=function(a,b){if("colorAxis"!==a)return d.apply(this,arguments);const e=new q(this,z(b.axis,{index:this[a].length,isX:!1}));this.isDirtyLegend=!0;this.axes.forEach(function(a){a.series=[]});
this.series.forEach(function(a){a.bindAxes();a.isDirtyData=!0});n(b.redraw,!0)&&this.redraw(b.animation);return e}}function y(){this.elem.attr("fill",l(this.start).tweenTo(l(this.end),this.pos),void 0,!0)}function x(){this.elem.attr("stroke",l(this.start).tweenTo(l(this.end),this.pos),void 0,!0)}const f=[];let q;c.compose=function(c,g,B,l,n){q||(q=c);h.pushUnique(f,g)&&(c=g.prototype,c.collectionsWithUpdate.push("colorAxis"),c.collectionsWithInit.colorAxis=[c.addColorAxis],u(g,"afterGetAxes",A),k(g));
h.pushUnique(f,B)&&(g=B.prototype,g.fillSetter=y,g.strokeSetter=x);h.pushUnique(f,l)&&(u(l,"afterGetAllItems",t),u(l,"afterColorizeItem",m),u(l,"afterUpdate",r));h.pushUnique(f,n)&&(w(n.prototype,{optionalAxis:"colorAxis",translateColors:d}),w(n.prototype.pointClass.prototype,{setVisible:a}),u(n,"afterTranslate",e,{order:1}),u(n,"bindAxes",b))};c.pointSetVisible=a})(t||(t={}));return t});p(c,"Core/Axis/Color/ColorAxisDefaults.js",[],function(){return{lineWidth:0,minPadding:0,maxPadding:0,gridLineColor:"#ffffff",
gridLineWidth:1,tickPixelInterval:72,startOnTick:!0,endOnTick:!0,offset:0,marker:{animation:{duration:50},width:.01,color:"#999999"},labels:{distance:8,overflow:"justify",rotation:0},minColor:"#e6e9ff",maxColor:"#0022ff",tickLength:5,showInLegend:!0}});p(c,"Core/Axis/Color/ColorAxis.js",[c["Core/Axis/Axis.js"],c["Core/Color/Color.js"],c["Core/Axis/Color/ColorAxisComposition.js"],c["Core/Axis/Color/ColorAxisDefaults.js"],c["Core/Legend/LegendSymbol.js"],c["Core/Series/SeriesRegistry.js"],c["Core/Utilities.js"]],
function(c,h,l,u,p,z,n){const {parse:g}=h,{series:t}=z,{extend:A,isNumber:w,merge:v,pick:m}=n;class r extends c{static compose(e,b,a,d){l.compose(r,e,b,a,d)}constructor(e,b){super(e,b);this.beforePadding=!1;this.chart=void 0;this.coll="colorAxis";this.stops=this.options=this.dataClasses=void 0;this.visible=!0;this.init(e,b)}init(e,b){var a=e.options.legend||{};const d=b.layout?"vertical"!==b.layout:"vertical"!==a.layout,k=b.visible;a=v(r.defaultColorAxisOptions,b,{showEmpty:!1,title:null,visible:a.enabled&&
!1!==k});this.coll="colorAxis";this.side=b.side||d?2:1;this.reversed=b.reversed||!d;this.opposite=!d;super.init(e,a);this.userOptions.visible=k;b.dataClasses&&this.initDataClasses(b);this.initStops();this.horiz=d;this.zoomEnabled=!1}initDataClasses(e){const b=this.chart,a=this.legendItem=this.legendItem||{},d=e.dataClasses.length,k=this.options;let c,x=0,f=b.options.chart.colorCount;this.dataClasses=c=[];a.labels=[];(e.dataClasses||[]).forEach(function(a,e){a=v(a);c.push(a);if(b.styledMode||!a.color)"category"===
k.dataClassColor?(b.styledMode||(e=b.options.colors,f=e.length,a.color=e[x]),a.colorIndex=x,x++,x===f&&(x=0)):a.color=g(k.minColor).tweenTo(g(k.maxColor),2>d?.5:e/(d-1))})}hasData(){return!!(this.tickPositions||[]).length}setTickPositions(){if(!this.dataClasses)return super.setTickPositions()}initStops(){this.stops=this.options.stops||[[0,this.options.minColor],[1,this.options.maxColor]];this.stops.forEach(function(e){e.color=g(e[1])})}setOptions(e){super.setOptions(e);this.options.crosshair=this.options.marker}setAxisSize(){var e=
this.legendItem&&this.legendItem.symbol;const b=this.chart;var a=b.options.legend||{};let d,k;e?(this.left=a=e.attr("x"),this.top=d=e.attr("y"),this.width=k=e.attr("width"),this.height=e=e.attr("height"),this.right=b.chartWidth-a-k,this.bottom=b.chartHeight-d-e,this.len=this.horiz?k:e,this.pos=this.horiz?a:d):this.len=(this.horiz?a.symbolWidth:a.symbolHeight)||r.defaultLegendLength}normalizedValue(e){this.logarithmic&&(e=this.logarithmic.log2lin(e));return 1-(this.max-e)/(this.max-this.min||1)}toColor(e,
b){const a=this.dataClasses;var d=this.stops;let k,c,g,f;if(a)for(f=a.length;f--;){if(g=a[f],k=g.from,d=g.to,("undefined"===typeof k||e>=k)&&("undefined"===typeof d||e<=d)){c=g.color;b&&(b.dataClass=f,b.colorIndex=g.colorIndex);break}}else{e=this.normalizedValue(e);for(f=d.length;f--&&!(e>d[f][0]););k=d[f]||d[f+1];d=d[f+1]||k;e=1-(d[0]-e)/(d[0]-k[0]||1);c=k.color.tweenTo(d.color,e)}return c}getOffset(){const e=this.legendItem&&this.legendItem.group,b=this.chart.axisOffset[this.side];if(e){this.axisParent=
e;super.getOffset();const a=this.chart.legend;a.allItems.forEach(function(d){d instanceof r&&d.drawLegendSymbol(a,d)});a.render();this.chart.getMargins(!0);this.added||(this.added=!0,this.labelLeft=0,this.labelRight=this.width);this.chart.axisOffset[this.side]=b}}setLegendColor(){var e=this.reversed,b=e?1:0;e=e?0:1;b=this.horiz?[b,0,e,0]:[0,e,0,b];this.legendColor={linearGradient:{x1:b[0],y1:b[1],x2:b[2],y2:b[3]},stops:this.stops}}drawLegendSymbol(e,b){var a;b=b.legendItem||{};const d=e.padding,k=
e.options,c=this.options.labels,g=m(k.itemDistance,10),f=this.horiz,q=m(k.symbolWidth,f?r.defaultLegendLength:12),h=m(k.symbolHeight,f?12:r.defaultLegendLength),A=m(k.labelPadding,f?16:30);this.setLegendColor();b.symbol||(b.symbol=this.chart.renderer.symbol("roundedRect",0,e.baseline-11,q,h,{r:null!==(a=k.symbolRadius)&&void 0!==a?a:3}).attr({zIndex:1}).add(b.group));b.labelWidth=q+d+(f?g:m(c.x,c.distance)+this.maxLabelLength);b.labelHeight=h+d+(f?A:0)}setState(e){this.series.forEach(function(b){b.setState(e)})}setVisible(){}getSeriesExtremes(){const e=
this.series;let b;let a,d,k=e.length,c,g;this.dataMin=Infinity;for(this.dataMax=-Infinity;k--;){d=e[k];b=d.colorKey=m(d.options.colorKey,d.colorKey,d.pointValKey,d.zoneAxis,"y");var f=d.pointArrayMap;a=d[b+"Min"]&&d[b+"Max"];if(d[b+"Data"])var q=d[b+"Data"];else if(f){if(q=[],f=f.indexOf(b),c=d.yData,0<=f&&c)for(g=0;g<c.length;g++)q.push(m(c[g][f],c[g]))}else q=d.yData;a?(d.minColorValue=d[b+"Min"],d.maxColorValue=d[b+"Max"]):(q=t.prototype.getExtremes.call(d,q),d.minColorValue=q.dataMin,d.maxColorValue=
q.dataMax);"undefined"!==typeof d.minColorValue&&(this.dataMin=Math.min(this.dataMin,d.minColorValue),this.dataMax=Math.max(this.dataMax,d.maxColorValue));a||t.prototype.applyExtremes.call(d)}}drawCrosshair(e,b){const a=this.legendItem||{},d=b&&b.plotX,c=b&&b.plotY,g=this.pos,h=this.len;let f;b&&(f=this.toPixels(b.getNestedProperty(b.series.colorKey)),f<g?f=g-2:f>g+h&&(f=g+h+2),b.plotX=f,b.plotY=this.len-f,super.drawCrosshair(e,b),b.plotX=d,b.plotY=c,this.cross&&!this.cross.addedToColorAxis&&a.group&&
(this.cross.addClass("highcharts-coloraxis-marker").add(a.group),this.cross.addedToColorAxis=!0,this.chart.styledMode||"object"!==typeof this.crosshair||this.cross.attr({fill:this.crosshair.color})))}getPlotLinePath(e){const b=this.left,a=e.translatedValue,d=this.top;return w(a)?this.horiz?[["M",a-4,d-6],["L",a+4,d-6],["L",a,d],["Z"]]:[["M",b,a],["L",b-6,a+6],["L",b-6,a-6],["Z"]]:super.getPlotLinePath(e)}update(e,b){const a=this.chart.legend;this.series.forEach(a=>{a.isDirtyData=!0});(e.dataClasses&&
a.allItems||this.dataClasses)&&this.destroyItems();super.update(e,b);this.legendItem&&this.legendItem.label&&(this.setLegendColor(),a.colorizeItem(this,!0))}destroyItems(){const e=this.chart,b=this.legendItem||{};if(b.label)e.legend.destroyItem(this);else if(b.labels)for(const a of b.labels)e.legend.destroyItem(a);e.isDirtyLegend=!0}destroy(){this.chart.isDirtyLegend=!0;this.destroyItems();super.destroy(...[].slice.call(arguments))}remove(e){this.destroyItems();super.remove(e)}getDataClassLegendSymbols(){const e=
this,b=e.chart,a=e.legendItem&&e.legendItem.labels||[],d=b.options.legend,c=m(d.valueDecimals,-1),g=m(d.valueSuffix,""),h=a=>e.series.reduce((d,b)=>{d.push(...b.points.filter(d=>d.dataClass===a));return d},[]);let f;a.length||e.dataClasses.forEach((d,k)=>{const q=d.from,y=d.to,{numberFormatter:m}=b;let t=!0;f="";"undefined"===typeof q?f="< ":"undefined"===typeof y&&(f="> ");"undefined"!==typeof q&&(f+=m(q,c)+g);"undefined"!==typeof q&&"undefined"!==typeof y&&(f+=" - ");"undefined"!==typeof y&&(f+=
m(y,c)+g);a.push(A({chart:b,name:f,options:{},drawLegendSymbol:p.rectangle,visible:!0,isDataClass:!0,setState:a=>{for(const d of h(k))d.setState(a)},setVisible:function(){this.visible=t=e.visible=!t;for(const a of h(k))a.setVisible(t);b.legend.colorizeItem(this,t)}},d))});return a}}r.defaultColorAxisOptions=u;r.defaultLegendLength=200;r.keepProps=["legendItem"];Array.prototype.push.apply(c.keepProps,r.keepProps);"";return r});p(c,"Series/ColorMapComposition.js",[c["Core/Series/SeriesRegistry.js"],
c["Core/Utilities.js"]],function(c,h){const {column:{prototype:l}}=c.seriesTypes,{addEvent:u,defined:w}=h;var p;(function(c){function g(c){this.moveToTopOnHover&&this.graphic&&this.graphic.attr({zIndex:c&&"hover"===c.state?1:0})}const t=[];c.pointMembers={dataLabelOnNull:!0,moveToTopOnHover:!0,isValid:function(){return null!==this.value&&Infinity!==this.value&&-Infinity!==this.value&&(void 0===this.value||!isNaN(this.value))}};c.seriesMembers={colorKey:"value",axisTypes:["xAxis","yAxis","colorAxis"],
parallelArrays:["x","y","value"],pointArrayMap:["value"],trackerGroups:["group","markerGroup","dataLabelsGroup"],colorAttribs:function(c){const g={};!w(c.color)||c.state&&"normal"!==c.state||(g[this.colorProp||"fill"]=c.color);return g},pointAttribs:l.pointAttribs};c.compose=function(c){const l=c.prototype.pointClass;h.pushUnique(t,l)&&u(l,"afterSetState",g);return c}})(p||(p={}));return p});p(c,"Series/Heatmap/HeatmapPoint.js",[c["Core/Series/SeriesRegistry.js"],c["Core/Utilities.js"]],function(c,
h){({seriesTypes:{scatter:{prototype:{pointClass:c}}}}=c);const {clamp:l,defined:u,extend:p,pick:w}=h;class n extends c{constructor(){super(...arguments);this.y=this.x=this.value=this.series=this.options=void 0}applyOptions(c,h){(this.isNull||null===this.value)&&delete this.color;super.applyOptions(c,h);this.formatPrefix=this.isNull||null===this.value?"null":"point";return this}getCellAttributes(){var c=this.series;const h=c.options,n=(h.colsize||1)/2,p=(h.rowsize||1)/2,v=c.xAxis,m=c.yAxis,r=this.options.marker||
c.options.marker;c=c.pointPlacementToXValue();const e=w(this.pointPadding,h.pointPadding,0),b={x1:l(Math.round(v.len-v.translate(this.x-n,!1,!0,!1,!0,-c)),-v.len,2*v.len),x2:l(Math.round(v.len-v.translate(this.x+n,!1,!0,!1,!0,-c)),-v.len,2*v.len),y1:l(Math.round(m.translate(this.y-p,!1,!0,!1,!0)),-m.len,2*m.len),y2:l(Math.round(m.translate(this.y+p,!1,!0,!1,!0)),-m.len,2*m.len)};[["width","x"],["height","y"]].forEach(function(a){var d=a[0];a=a[1];let c=a+"1",g=a+"2";const h=Math.abs(b[c]-b[g]),f=
r&&r.lineWidth||0,q=Math.abs(b[c]+b[g])/2;d=r&&r[d];u(d)&&d<h&&(d=d/2+f/2,b[c]=q-d,b[g]=q+d);if(e){if("x"===a&&v.reversed||"y"===a&&!m.reversed)c=g,g=a+"1";b[c]+=e;b[g]-=e}});return b}haloPath(c){if(!c)return[];const {x:g=0,y:h=0,width:l=0,height:n=0}=this.shapeArgs||{};return[["M",g-c,h-c],["L",g-c,h+n+c],["L",g+l+c,h+n+c],["L",g+l+c,h-c],["Z"]]}isValid(){return Infinity!==this.value&&-Infinity!==this.value}}p(n.prototype,{dataLabelOnNull:!0,moveToTopOnHover:!0,ttBelow:!1});return n});p(c,"Series/Heatmap/HeatmapSeries.js",
[c["Core/Color/Color.js"],c["Series/ColorMapComposition.js"],c["Series/Heatmap/HeatmapPoint.js"],c["Core/Series/SeriesRegistry.js"],c["Core/Renderer/SVG/SVGRenderer.js"],c["Core/Utilities.js"]],function(c,h,l,p,C,z){const {series:n,seriesTypes:{column:g,scatter:t}}=p,{prototype:{symbols:w}}=C,{extend:u,fireEvent:v,isNumber:m,merge:r,pick:e}=z;class b extends t{constructor(){super(...arguments);this.points=this.options=this.data=this.colorAxis=void 0;this.valueMin=this.valueMax=NaN}drawPoints(){if((this.options.marker||
{}).enabled||this._hasPointMarkers)n.prototype.drawPoints.call(this),this.points.forEach(a=>{a.graphic&&(a.graphic[this.chart.styledMode?"css":"animate"](this.colorAttribs(a)),null===a.value&&a.graphic.addClass("highcharts-null-point"))})}getExtremes(){const {dataMin:a,dataMax:d}=n.prototype.getExtremes.call(this,this.valueData);m(a)&&(this.valueMin=a);m(d)&&(this.valueMax=d);return n.prototype.getExtremes.call(this)}getValidPoints(a,d){return n.prototype.getValidPoints.call(this,a,d,!0)}hasData(){return!!this.processedXData.length}init(){super.init.apply(this,
arguments);const a=this.options;a.pointRange=e(a.pointRange,a.colsize||1);this.yAxis.axisPointRange=a.rowsize||1;w.ellipse=w.circle;a.marker&&m(a.borderRadius)&&(a.marker.r=a.borderRadius)}markerAttribs(a,d){const c=a.shapeArgs||{};if(a.hasImage)return{x:a.plotX,y:a.plotY};if(d&&"normal"!==d){var b=a.options.marker||{};a=this.options.marker||{};a=a.states&&a.states[d]||{};b=b.states&&b.states[d]||{};d=(b.width||a.width||c.width||0)+(b.widthPlus||a.widthPlus||0);a=(b.height||a.height||c.height||0)+
(b.heightPlus||a.heightPlus||0);return{x:(c.x||0)+((c.width||0)-d)/2,y:(c.y||0)+((c.height||0)-a)/2,width:d,height:a}}return c}pointAttribs(a,d){const b=n.prototype.pointAttribs.call(this,a,d),e=this.options||{};var g=this.chart.options.plotOptions||{},f=g.series||{};const h=g.heatmap||{};g=a&&a.options.borderColor||e.borderColor||h.borderColor||f.borderColor;f=a&&a.options.borderWidth||e.borderWidth||h.borderWidth||f.borderWidth||b["stroke-width"];b.stroke=a&&a.marker&&a.marker.lineColor||e.marker&&
e.marker.lineColor||g||this.color;b["stroke-width"]=f;d&&"normal"!==d&&(a=r(e.states&&e.states[d],e.marker&&e.marker.states&&e.marker.states[d],a&&a.options.states&&a.options.states[d]||{}),b.fill=a.color||c.parse(b.fill).brighten(a.brightness||0).get(),b.stroke=a.lineColor||b.stroke);return b}translate(){const {borderRadius:a,marker:b}=this.options,c=b&&b.symbol||"rect",e=w[c]?c:"rect",g=-1!==["circle","square"].indexOf(e);this.generatePoints();this.points.forEach(function(b){const d=b.getCellAttributes();
let f=Math.min(d.x1,d.x2);var h=Math.min(d.y1,d.y2);let k=Math.max(Math.abs(d.x2-d.x1),0),l=Math.max(Math.abs(d.y2-d.y1),0);b.hasImage=0===(b.marker&&b.marker.symbol||c||"").indexOf("url");g&&(h=Math.abs(k-l),f=Math.min(d.x1,d.x2)+(k<l?0:h/2),h=Math.min(d.y1,d.y2)+(k<l?h/2:0),k=l=Math.min(k,l));b.hasImage&&(b.marker={width:k,height:l});b.plotX=b.clientX=(d.x1+d.x2)/2;b.plotY=(d.y1+d.y2)/2;b.shapeType="path";b.shapeArgs=r(!0,{x:f,y:h,width:k,height:l},{d:w[e](f,h,k,l,{r:m(a)?a:0})})});v(this,"afterTranslate")}}
b.defaultOptions=r(t.defaultOptions,{animation:!1,borderRadius:0,borderWidth:0,nullColor:"#f7f7f7",dataLabels:{formatter:function(){const {numberFormatter:a}=this.series.chart,{value:b}=this.point;return m(b)?a(b,-1):""},inside:!0,verticalAlign:"middle",crop:!1,overflow:"allow",padding:0},marker:{symbol:"rect",radius:0,lineColor:void 0,states:{hover:{lineWidthPlus:0},select:{}}},clip:!0,pointRange:null,tooltip:{pointFormat:"{point.x}, {point.y}: {point.value}<br/>"},states:{hover:{halo:!1,brightness:.2}},
legendSymbol:"rectangle"});u(b.prototype,{axisTypes:h.seriesMembers.axisTypes,colorKey:h.seriesMembers.colorKey,directTouch:!0,getExtremesFromAll:!0,parallelArrays:h.seriesMembers.parallelArrays,pointArrayMap:["y","value"],pointClass:l,specialGroup:"group",trackerGroups:h.seriesMembers.trackerGroups,alignDataLabel:g.prototype.alignDataLabel,colorAttribs:h.seriesMembers.colorAttribs,getSymbol:n.prototype.getSymbol});h.compose(b);p.registerSeriesType("heatmap",b);"";"";return b});p(c,"masters/modules/heatmap.src.js",
[c["Core/Globals.js"],c["Core/Axis/Color/ColorAxis.js"]],function(c,h){c.ColorAxis=h;h.compose(c.Chart,c.Fx,c.Legend,c.Series)})});
//# sourceMappingURL=heatmap.js.map